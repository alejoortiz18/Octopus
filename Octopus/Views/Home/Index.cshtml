@using Models.Model.Usuario
@model UsuarioReferidoViewModel

<div>
    <nav …>…</nav>
</div>

<div class="container py-4">
    <!-- NIVEL 0 -->
    <div id="nivel-0" class="mb-4">
        <div class="row justify-content-start g-4">
            @Html.Partial("_TarjetaUsuario", Model)
        </div>
    </div>

    <!-- NIVEL 1 -->
    <div id="nivel-1" class="mb-4">
        <div class="row justify-content-start g-4"></div>
    </div>

    <!-- NIVEL 2 -->
    <div id="nivel-2" class="mb-4">
        <div class="row justify-content-start g-4"></div>
    </div>

    <!-- NIVEL 3 -->
    <div id="nivel-3" class="mb-4">
        <div class="row justify-content-start g-4"></div>
    </div>

    <!-- NIVEL 4 -->
    <div id="nivel-4" class="mb-4">
        <div class="row justify-content-start g-4"></div>
    </div>
</div>

@section Scripts {
    <script>
        async function toggleReferidosDinamico(usuarioId, nivel, btn) {
          const maxLevel = 4;
          const currRow = document.querySelector(`#nivel-${nivel} .row`);
          const nextRow = document.querySelector(`#nivel-${nivel+1} .row`);
          const isHide = btn.innerText === 'OCULTAR REFERIDOS';

          if (isHide) {
            // ── 1) Cerrar: borrar el nivel siguiente y restaurar hermanos
            nextRow.innerHTML = '';
            currRow
              .querySelectorAll('.col-6, .col-md-4, .col-lg-2')
              .forEach(col => {
                col.style.display = '';
                const b = col.querySelector('button.btn-outline-danger');
                if (b) b.innerText = 'VER REFERIDOS';
              });
            return;
          }

          // ── 2) Abrir: limpiar desde nextLevel hasta maxLevel
          for (let lv = nivel + 1; lv <= maxLevel; lv++) {
            document.querySelector(`#nivel-${lv} .row`).innerHTML = '';
          }
          // ── 3) Ocultar hermanos en este nivel
          currRow
            .querySelectorAll('.col-6, .col-md-4, .col-lg-2')
            .forEach(col => {
              if (!col.contains(btn)) col.style.display = 'none';
            });

          // ── 4) Traer partial de los hijos
          const resp = await fetch(`/Home/GetReferidosPartial?usuarioId=${usuarioId}`);
          if (!resp.ok) {
            console.error('Error cargando referidos de usuario', usuarioId);
            return;
          }
          const html = await resp.text();

          // ── 5) Pintar hijos en el nivel+1
          nextRow.innerHTML = html;

          // ── 6) Actualizar texto del botón
          btn.innerText = 'OCULTAR REFERIDOS';
        }
    </script>
}


<style>
.ps__rail-x {
    display: none !important;
}

body, html {
    overflow-x: hidden;
}

.contenedor-referidos {
    overflow-x: hidden;
}
</style>







